<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: git | 小毛的胡思乱想]]></title>
  <link href="http://mccxj.github.com/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://mccxj.github.com/"/>
  <updated>2013-06-30T18:14:17+08:00</updated>
  <id>http://mccxj.github.com/</id>
  <author>
    <name><![CDATA[蔡晓建]]></name>
    <email><![CDATA[mc02cxj@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[git分支让github page用上jekyll插件]]></title>
    <link href="http://mccxj.github.com/blog/20130127_jekyll-plugin-with-git-branch.html"/>
    <updated>2013-01-27T00:00:00+08:00</updated>
    <id>http://mccxj.github.com/blog/jekyll-plugin-with-git-branch</id>
    <content type="html"><![CDATA[<p><img src="/assets/images/2013/jekyll-plugin-with-git-branch.png" alt="git分支让github page用上jekyll插件" /></p>

<p><strong>本博客已经在2013-3-9转换成octopress了,比这种手动方式要方便很多。</strong></p>

<p>github page是个不错的应用，可惜对jekyll有比较多的限制，特别是插件方面。
为了解决这个问题，我选择了分支来处理这个，大约就是source分支保存未编译的内容，
master分支保留生成的网站。下面是大概的操作过程，针对已有博客的迁移。</p>

<h3>迁移过程</h3>

<p>首先，到github上手动打一个分支出来，叫source分支。</p>

<p>接着，处理master分支，清除所有内容。注意git pull的功能是让本地可以识别到远程分支。
<strong>.nojekyll文件</strong>是让github page不启用jekyll生成网站，而是直接使用目录下的内容。
并把所有带下划线的目录都过滤掉。
{% highlight bash %}
cd mccxj.github.com
git rm -fr *</p>

<p>touch .nojekyll
git add .nojekyll</p>

<h1>add _<em>/</em> to .gitignore</h1>

<p>vi .gitignore</p>

<p>git commit -a -m "remote all pages"
{% endhighlight %}</p>

<p>下面，继续处理source分支，其实基本保持不变就可以了，主要是生成网站内容。
<strong>带t的参数是让source跟踪远程source分支</strong>。我的jekyll是采用最新源码装的，命令参数有些变化，
请参考jekyll帮助，
{% highlight bash %}
git checkout -t origin/source</p>

<p>$ git branch -a
  master
* source
  remotes/origin/HEAD -> origin/master
  remotes/origin/master
  remotes/origin/source</p>

<h1>generate page to _site</h1>

<p>jekyll build
{% endhighlight %}</p>

<p>最后，切回master分支，并<strong>拷贝网站内容</strong>到根目录，然后把内容提交并push到远程即可。
{% highlight bash %}
git checkout master</p>

<p>cp -r _site/* .</p>

<h1>add then commit</h1>

<p>git add / git commit</p>

<h1>push to remote branch</h1>

<p>git push origin master
{% endhighlight %}</p>

<h3>新写作流程</h3>

<p>现在已经迁移完成了，下面介绍一些新写作流程。</p>

<p>首先，<strong>注意要在source分支上工作</strong>，在提交到远程之前都是一样。
{% highlight bash %}
git checkout source</p>

<h1>rake post title="xxxx"</h1>

<h1>write something</h1>

<p>git add xxxx.md
git commit -m "add new post"</p>

<h1>jekyll build</h1>

<p>jekyll serve
{% endhighlight %}</p>

<p>当你确认完成，并生成网站内容后，切换到master分支处理。
<strong>注意需要提交两个分支</strong>，例如使用git push可以同时提交两个分支。
{% highlight bash %}
git checkout master</p>

<p>cp -r _site/* .</p>

<h1>add then commit</h1>

<p>git add / git commit</p>

<h1>push to remote branch</h1>

<p>git push
{% endhighlight %}</p>

<p>还不算麻烦吧，其实我是尝试切换到<a href="http://octopress.org/">octopress</a>，发现有不少地方出现问题，才采用这种方式的。Enjoy It!</p>
]]></content>
  </entry>
  
</feed>
